{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport history from '../../../services/history';\nimport api from '../../../services/api';\nimport { loginSuccess, loginFailure } from './actions';\nexport function* login({\n  payload\n}) {\n  try {\n    const {\n      user,\n      password\n    } = payload;\n    const response = yield call(api.post, '/sessions', {\n      user,\n      password\n    });\n    const {\n      token,\n      dados\n    } = response.data;\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n    yield put(loginSuccess(token, dados));\n    const {\n      nivel\n    } = dados;\n\n    switch (nivel) {\n      case 0:\n        history.push('/desafio-1');\n        break;\n\n      case 1:\n        history.push('/desafio-2');\n        break;\n\n      case 2:\n        history.push('/desafio-3');\n        break;\n\n      case 3:\n        history.push('/desafio-4');\n        break;\n\n      case 4:\n        history.push('/desafio-5');\n        break;\n\n      case 5:\n        history.push('/desafio-6');\n        break;\n\n      case 6:\n        history.push('/final');\n        break;\n\n      default:\n    }\n  } catch (err) {\n    toast.error('Falha na autenticação, verifique seus dados');\n    yield put(loginFailure());\n  }\n}\nexport function* createUser({\n  payload\n}) {\n  try {\n    const {\n      name,\n      phone,\n      type,\n      size,\n      password,\n      user\n    } = payload;\n    yield call(api.post, 'users', {\n      name,\n      phone,\n      type,\n      type,\n      cpf\n    });\n    history.push('/');\n  } catch (err) {\n    toast.error('Falha no cadastro, verifique os dados !');\n    yield put(loginFailure());\n  }\n}\nexport function setToken({\n  payload\n}) {\n  if (!payload) return;\n  const {\n    token\n  } = payload.auth;\n\n  if (token) {\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n  }\n}\nexport function signOut() {\n  history.push('/');\n}\nexport default all([takeLatest('persist/REHYDRATE', setToken), takeLatest('@auth/LOGIN_REQUEST', login), takeLatest('@auth/CREATE_USER_REQUEST', createUser), takeLatest('@auth/SIGN_OUT', signOut)]);","map":{"version":3,"sources":["/Users/fabiolucaslima/Dev/MegaHack-Front/src/store/modules/auth/sagas.js"],"names":["takeLatest","call","put","all","toast","history","api","loginSuccess","loginFailure","login","payload","user","password","response","post","token","dados","data","defaults","headers","Authorization","nivel","push","err","error","createUser","name","phone","type","size","cpf","setToken","auth","signOut"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,WAA3C;AAEA,OAAO,UAAUC,KAAV,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAqBF,OAA3B;AACA,UAAMG,QAAQ,GAAG,MAAMZ,IAAI,CAACK,GAAG,CAACQ,IAAL,EAAW,WAAX,EAAwB;AACjDH,MAAAA,IADiD;AAEjDC,MAAAA;AAFiD,KAAxB,CAA3B;AAIA,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmBH,QAAQ,CAACI,IAAlC;AACAX,IAAAA,GAAG,CAACY,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASL,KAAM,EAArD;AACA,UAAMb,GAAG,CAACK,YAAY,CAACQ,KAAD,EAAQC,KAAR,CAAb,CAAT;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAYL,KAAlB;;AAEA,YAAQK,KAAR;AACE,WAAK,CAAL;AACEhB,QAAAA,OAAO,CAACiB,IAAR,CAAa,YAAb;AACA;;AAEF,WAAK,CAAL;AACEjB,QAAAA,OAAO,CAACiB,IAAR,CAAa,YAAb;AACA;;AAEF,WAAK,CAAL;AACEjB,QAAAA,OAAO,CAACiB,IAAR,CAAa,YAAb;AACA;;AAEF,WAAK,CAAL;AACEjB,QAAAA,OAAO,CAACiB,IAAR,CAAa,YAAb;AACA;;AAEF,WAAK,CAAL;AACEjB,QAAAA,OAAO,CAACiB,IAAR,CAAa,YAAb;AACA;;AAEF,WAAK,CAAL;AACEjB,QAAAA,OAAO,CAACiB,IAAR,CAAa,YAAb;AACA;;AAEF,WAAK,CAAL;AACEjB,QAAAA,OAAO,CAACiB,IAAR,CAAa,QAAb;AACA;;AAEF;AA7BF;AA+BD,GA1CD,CA0CE,OAAOC,GAAP,EAAY;AACZnB,IAAAA,KAAK,CAACoB,KAAN,CAAY,6CAAZ;AACA,UAAMtB,GAAG,CAACM,YAAY,EAAb,CAAT;AACD;AACF;AACD,OAAO,UAAUiB,UAAV,CAAqB;AAAEf,EAAAA;AAAF,CAArB,EAAkC;AACvC,MAAI;AACF,UAAM;AAAEgB,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA,IAArB;AAA2BjB,MAAAA,QAA3B;AAAqCD,MAAAA;AAArC,QAA8CD,OAApD;AAEA,UAAMT,IAAI,CAACK,GAAG,CAACQ,IAAL,EAAW,OAAX,EAAoB;AAC5BY,MAAAA,IAD4B;AAE5BC,MAAAA,KAF4B;AAG5BC,MAAAA,IAH4B;AAI5BA,MAAAA,IAJ4B;AAK5BE,MAAAA;AAL4B,KAApB,CAAV;AAQAzB,IAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACD,GAZD,CAYE,OAAOC,GAAP,EAAY;AACZnB,IAAAA,KAAK,CAACoB,KAAN,CAAY,yCAAZ;AAEA,UAAMtB,GAAG,CAACM,YAAY,EAAb,CAAT;AACD;AACF;AAED,OAAO,SAASuB,QAAT,CAAkB;AAAErB,EAAAA;AAAF,CAAlB,EAA+B;AACpC,MAAI,CAACA,OAAL,EAAc;AACd,QAAM;AAAEK,IAAAA;AAAF,MAAYL,OAAO,CAACsB,IAA1B;;AACA,MAAIjB,KAAJ,EAAW;AACTT,IAAAA,GAAG,CAACY,QAAJ,CAAaC,OAAb,CAAqBC,aAArB,GAAsC,UAASL,KAAM,EAArD;AACD;AACF;AACD,OAAO,SAASkB,OAAT,GAAmB;AACxB5B,EAAAA,OAAO,CAACiB,IAAR,CAAa,GAAb;AACD;AACD,eAAenB,GAAG,CAAC,CACjBH,UAAU,CAAC,mBAAD,EAAsB+B,QAAtB,CADO,EAEjB/B,UAAU,CAAC,qBAAD,EAAwBS,KAAxB,CAFO,EAGjBT,UAAU,CAAC,2BAAD,EAA8ByB,UAA9B,CAHO,EAIjBzB,UAAU,CAAC,gBAAD,EAAmBiC,OAAnB,CAJO,CAAD,CAAlB","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport history from '../../../services/history';\nimport api from '../../../services/api';\nimport { loginSuccess, loginFailure } from './actions';\n\nexport function* login({ payload }) {\n  try {\n    const { user, password } = payload;\n    const response = yield call(api.post, '/sessions', {\n      user,\n      password,\n    });\n    const { token, dados } = response.data;\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n    yield put(loginSuccess(token, dados));\n    const { nivel } = dados;\n\n    switch (nivel) {\n      case 0:\n        history.push('/desafio-1');\n        break;\n\n      case 1:\n        history.push('/desafio-2');\n        break;\n\n      case 2:\n        history.push('/desafio-3');\n        break;\n\n      case 3:\n        history.push('/desafio-4');\n        break;\n\n      case 4:\n        history.push('/desafio-5');\n        break;\n\n      case 5:\n        history.push('/desafio-6');\n        break;\n\n      case 6:\n        history.push('/final');\n        break;\n\n      default:\n    }\n  } catch (err) {\n    toast.error('Falha na autenticação, verifique seus dados');\n    yield put(loginFailure());\n  }\n}\nexport function* createUser({ payload }) {\n  try {\n    const { name, phone, type, size, password, user } = payload;\n\n    yield call(api.post, 'users', {\n      name,\n      phone,\n      type,\n      type,\n      cpf,\n    });\n\n    history.push('/');\n  } catch (err) {\n    toast.error('Falha no cadastro, verifique os dados !');\n\n    yield put(loginFailure());\n  }\n}\n\nexport function setToken({ payload }) {\n  if (!payload) return;\n  const { token } = payload.auth;\n  if (token) {\n    api.defaults.headers.Authorization = `Bearer ${token}`;\n  }\n}\nexport function signOut() {\n  history.push('/');\n}\nexport default all([\n  takeLatest('persist/REHYDRATE', setToken),\n  takeLatest('@auth/LOGIN_REQUEST', login),\n  takeLatest('@auth/CREATE_USER_REQUEST', createUser),\n  takeLatest('@auth/SIGN_OUT', signOut),\n]);\n"]},"metadata":{},"sourceType":"module"}