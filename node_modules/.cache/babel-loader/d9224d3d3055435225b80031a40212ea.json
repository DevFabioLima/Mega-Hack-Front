{"ast":null,"code":"import { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport createStore from \"./createStore\";\nimport persistReducers from \"./persistReducers\";\nimport rootReducer from \"./modules/rootReducer\";\nimport rootSaga from \"./modules/rootSaga\";\nconst sagaMonitor = process.env.NODE_ENV === \"development\" ? console.tron.createSagaMonitor() : null;\nconst sagaMiddlewares = createSagaMiddleware({\n  sagaMonitor\n});\nconst middlewares = [sagaMiddlewares];\nconst store = createStore(persistReducers(rootReducer), middlewares);\nconst persistor = persistStore(store);\nsagaMiddlewares.run(rootSaga);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/fabiolucaslima/Dev/react_order/hirata/src/store/index.js"],"names":["persistStore","createSagaMiddleware","createStore","persistReducers","rootReducer","rootSaga","sagaMonitor","process","env","NODE_ENV","console","tron","createSagaMonitor","sagaMiddlewares","middlewares","store","persistor","run"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,MAAMC,WAAW,GACfC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIC,OAAO,CAACC,IAAR,CAAaC,iBAAb,EADJ,GAEI,IAHN;AAKA,MAAMC,eAAe,GAAGZ,oBAAoB,CAAC;AAAEK,EAAAA;AAAF,CAAD,CAA5C;AACA,MAAMQ,WAAW,GAAG,CAACD,eAAD,CAApB;AACA,MAAME,KAAK,GAAGb,WAAW,CAACC,eAAe,CAACC,WAAD,CAAhB,EAA+BU,WAA/B,CAAzB;AACA,MAAME,SAAS,GAAGhB,YAAY,CAACe,KAAD,CAA9B;AACAF,eAAe,CAACI,GAAhB,CAAoBZ,QAApB;AACA,SAASU,KAAT,EAAgBC,SAAhB","sourcesContent":["import { persistStore } from \"redux-persist\";\nimport createSagaMiddleware from \"redux-saga\";\nimport createStore from \"./createStore\";\nimport persistReducers from \"./persistReducers\";\n\nimport rootReducer from \"./modules/rootReducer\";\nimport rootSaga from \"./modules/rootSaga\";\n\nconst sagaMonitor =\n  process.env.NODE_ENV === \"development\"\n    ? console.tron.createSagaMonitor()\n    : null;\n\nconst sagaMiddlewares = createSagaMiddleware({ sagaMonitor });\nconst middlewares = [sagaMiddlewares];\nconst store = createStore(persistReducers(rootReducer), middlewares);\nconst persistor = persistStore(store);\nsagaMiddlewares.run(rootSaga);\nexport { store, persistor };\n"]},"metadata":{},"sourceType":"module"}